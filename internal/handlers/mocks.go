// Code generated by MockGen. DO NOT EDIT.
// Source: ./internal/handlers/repository.go

// Package handlers is a generated GoMock package.
package handlers

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/timur-pro/ueba-get-items/internal/models"
)

// MockUebaRepository is a mock of UebaRepository interface.
type MockUebaRepository struct {
	ctrl     *gomock.Controller
	recorder *MockUebaRepositoryMockRecorder
}

// MockUebaRepositoryMockRecorder is the mock recorder for MockUebaRepository.
type MockUebaRepositoryMockRecorder struct {
	mock *MockUebaRepository
}

// NewMockUebaRepository creates a new mock instance.
func NewMockUebaRepository(ctrl *gomock.Controller) *MockUebaRepository {
	mock := &MockUebaRepository{ctrl: ctrl}
	mock.recorder = &MockUebaRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUebaRepository) EXPECT() *MockUebaRepositoryMockRecorder {
	return m.recorder
}

// GetItem mocks base method.
func (m *MockUebaRepository) GetItem(arg0 string) (models.Record, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItem", arg0)
	ret0, _ := ret[0].(models.Record)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItem indicates an expected call of GetItem.
func (mr *MockUebaRepositoryMockRecorder) GetItem(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItem", reflect.TypeOf((*MockUebaRepository)(nil).GetItem), arg0)
}
